name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjek56QTJOekkwTnpnNlFVRkZUems0ZERCd2JuUjVhMnMxVGt0ME1FTlBkWGs0TjIwdFVFaFhSVmswUjNjaUxDSkdTVXhGSWpvME9Ea3NJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGRkSUUxbFpHRnJZU0JMZFhKdmFYZGhJRnMzTWpCd1hTQmJVM1ZpWFNCQVFXNXBiV1Z6WDA5alpXRnVMbTFyZGlJc0lrbEVJam9pVFdWa1h6WmhPR1l4UFRBOU56SXdjQ0lzSWtOTlJDSTZJbHB0V25SalIxWnVTVU14Y0VsSWRIQmliRGx0WVZkNGJHWlRRWFJhYld4elpFZFdlVmd5VG5aaVdFSnpXbGhuWjBsdFVubFpXR1F3V2xob01GQlhXblppYmxKdFlWZDRiRkJYWjNWa1NGSnRUMjVTYkdWSVVUbEtlVUpDWW0xc2RGcFlUV2RVTWs1c1dWYzBaMHA2Y0cxaU1qVXdXVEk1YzJJelNUbGtNbWh3WkVkVk5scHRPWFZrU0U1d1pXMVZPVTFxVVRabFJEQjRUVVJ3TlZCVVJYZFBiVloxV1ZkS2MxcFVNRzVaYlZZd1pESldiR0pwYURCTVJFRnpUbFJCZDB0VFl6WlpWM2gzWVVkRk9Vb3liRzFMUjNnd1MwaFJjMDVFYXpWTFUzZDRURWRzYlV0SGVEQkxTRkZ6VGxSQmQwdFRkMjlOVXpCdlpFTXdNRTlVYTNCTFV6aDRURVJCY0V0VFNXZE1WekZvWTBOQmQwbERNWFJhV0ZKb1drZEdNRmxVY0hwUGJVVm5aRWRzTUdKSFZUbEphMEpDWW0xc2RGcFlUbVpVTWs1c1dWYzBhVWxETVhSYVdGSm9Xa2RHTUZsVWNIcFBiazFuWkVkc01HSkhWVGxKYTBKQ1ltMXNkRnBZVG1aVU1rNXNXVmMwYVVsRE1YUmFXRkpvV2tkR01GbFRRakJoV0ZKeldsUXdhVkZGUm5WaFZ6RnNZekU1VUZreVZtaGlhVWxuVEZkTk5tUnBRbk5oVjBwNlpHNVNhR1JxUldkTVdFSjVXbGhPYkdSRFFUSkpRekZ1U1VSSk1FMURRWFJqZVVGNFRXcG5kMlZFWTNsTlEwRjBZMGRzTkZneVduUmtRMEkxWkZoWk1FMXFRbmRKUXpGNlpHNVNhR1JxUlhSalIwWjVXVmN4ZWtsSVVqRmliVlU1VFZSd2JXRlhlSFJNVjJSNVdWZHNkVkJVUVdkTVYwNTVXbWxCTUU1NVFYUmlSemx1WWtkV01scFhkMmRhV0VwNVlqTkpaMHhYVFRaWlUwSnpZVmRLZG1OSVZucEpRekZvV1hsQmVVbERNV2haYVVFd1RVZHpaMHhYVFRaamVVSnFZak5DTlVsSWRIWmpSamx0WVZkNGJHWlRRWFJsVVQwOUlpd2lWRWhWVFVKT1FVbE1Jam9pTkRnNElpd2lRVlZVU0U5U0lqb2lOVGs0T1RFek9URTFOQ0o5
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

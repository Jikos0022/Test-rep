name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjME16UTRNalEzTlRBNlFVRklPV294WDJSRVFuVmtialo2U0ZaNVNuZGZkVjl3YnpkMVNtNXRjblZJU2xVaUxDSkdTVXhGSWpvME5ESXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGxkSUUxaGNuSnBaV1FnVkc4Z1IybHliQ0JKSUVoaGRHVWdXekV3T0RCd1hTQmJVM1ZpWFNCQVFXNXBiV1Z6WDA5alpXRnVMbTFyZGlJc0lrbEVJam9pVFdGeVgySm1aVE5pUFRJOU1UQTRNSEFpTENKRFRVUWlPaUphYlZwMFkwZFdia2xETVhCSlNIUndZbXc1YldGWGVHeG1VMEYwV20xc2MyUkhWbmxZTWs1MllsaENjMXBZWjJkSmJWSjVXVmhrTUZwWWFEQlFWMXAyWW01U2JXRlhlR3hRVjJkMVpFaFNiVTl1VW14bFNGRTVTamhMWjBsRlJuVmhWekZzWTNsQ1VGa3lWbWhpYVVGdVQyMWFkbUp1VW1waU1uaDJZMm94TTJGSGJEQmFWSEJ0WWpJMU1HTXliRFphVkRCNlRtcHdORkJVUlhkUGJtczVUVlJCTmxwWE5XaFpiWGhzVUZOa2FWcFlVak5hVjFaMVMwaFJjMDFEZHpGTlJFRndTbnB3YUdKSVFtOVpWREJ1WVZkWmIySklVVzlrUTNjd1QxUnJjRXhFUlhOaFYxbHZZa2hSYjJSRGR6Rk5SRUZ3VEVObmVFeFRhREJNVkZFMVQxTnJjRXg2UlhOTlEydHdTbmxKWjB4WE1XaGpRMEYzU1VNeGRGcFlVbWhhUjBZd1dWUndlazl0Uldka1Iyd3dZa2RWT1VsclFrSmliV3gwV2xoT1psUXlUbXhaVnpScFNVTXhkRnBZVW1oYVIwWXdXVlJ3ZWs5dVRXZGtSMnd3WWtkVk9VbHJRa0ppYld4MFdsaE9abFF5VG14WlZ6UnBTVU14ZEZwWVVtaGFSMFl3V1ZOQ01HRllVbk5hVkRCcFVVVkdkV0ZYTVd4ak1UbFFXVEpXYUdKcFNXZE1WMDAyWkdsQ2MyRlhTbnBrYmxKb1pHcEZaMHhZUW5sYVdFNXNaRU5CTWtsRE1XNUpSRWt3VFVOQmRHTjVRWGhQVkVsM1pVUkZkMDlFUVdkTVdFbG5UWHBCWjB4WVFuQmxSamx0WWxoUloyVllWakpPUkVsM1kwTkJkR016V2pCWldGbDRURmhDYUdOdFJuUmplVUl3WkZjMWJGQlVSVFphYld4ellsTXhibU50Um5CaWFqQjNTVU14YW1OdFdXZE9SRkZuVEZkNGRsb3llR3hrYlZaelNVZFdlV050T1hsSlF6RnFUMjFGWjJKSGJHbGlNMEl4WTNsQmRGbFhUV2ROYVVGMFdWZEpaMDVFUW5KSlF6RnFUMjVOWjFreU9YZGxVMEkzWWpOQ1pscHRiSE5hV0RCblRGaHJQU0lzSWxSSVZVMUNUa0ZKVENJNklqSXpOQ0lzSWtGVlZFaFBVaUk2SWpZMk56STNOVEl4TnpjaWZRPT0=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjd01EazNORFV4TnpJNlFVRkZWbEZhYjBrek1rOXpjRUZHZGpGMk1WVmZWMFF4VGw5S1JGOVVVelZ6WWpRaUxDSkdTVXhGSWpvek5Ea3NJa1pKVEVWZlRrRk5SU0k2SWx0VE1ESXRNRGRkSUVsemFIVnlZU0JiTkRnd2NGMGdXMFIxWVd4ZElFQkJibWx0WlhOZlQyTmxZVzR1Yld0Mklpd2lTVVFpT2lKSmMyaGZPR1F5Tm1VOU1EMDBPREJ3SWl3aVEwMUVJam9pV20xYWRHTkhWbTVKUXpGd1NVaDBjR0pzT1cxaFYzaHNabE5CZEZwdGJITmtSMVo1V0RKT2RtSllRbk5hV0dkblNXMVNlVmxZWkRCYVdHZ3dVRmRhZG1KdVVtMWhWM2hzVUZkbmRXUklVbTFQYmxKc1pVaFJPVXA1UWtKaWJXeDBXbGhOWjFReVRteFpWelJuU25wd2JXSXlOVEJaTWpsellqTkpPV1F5YUhCa1IxVTJXbTA1ZFdSSVRuQmxiVlU1VFdwUk5tVkVNSGhOUkhBMVVGUkZkMDl0Vm5WWlYwcHpXbFF3YmxsdFZqQmtNbFpzWW1sb01FeEVRWE5PVkVGM1MxTmpObGxYZUhkaFIwVTVTakpzYlV0SGVEQkxTRkZ6VGtSck5VdFRkM2hNUjJ4dFMwZDRNRXRJVVhOT1ZFRjNTMU4zYjAxVE1HOWtRekF3VDFScmNFdFRPSGhNUkVGd1MxTmphVWxETVhSWldFRm5UVU5CZEdKWFZqQlpWMUpvWkVkRk5tTjZjR2hKU0ZKd1pFZDRiRkJUU2tGUlZ6VndZbGRXZWxnd09XcGFWMFoxU1dsQmRHSlhWakJaVjFKb1pFZEZObU42Y0hwSlNGSndaRWQ0YkZCVFNrRlJWelZ3WWxkV2VsZ3dPV3BhVjBaMVNXbEJkR0pYVmpCWlYxSm9aRWRGWjJSSGJEQmlSMVU1U1d0Q1FtSnRiSFJhV0U1bVZESk9iRmxYTkdsSlF6RnFUMjVaWjJKSGJHbGxSRWt5VGtOQmRHTklTbXhqTWxZd1NVaGFiR051YkcxWldFNHdTVU14YmtsRVNUQk5RMEYwWTNsQk5FNVVValJPUkdkM1NVTXhkMkZZYUdaYWJURXdTVWhzTVdScVVYbE5TRUZuVEZkT2VWcHBRWGxQUTBGMFlrYzVibUpIVmpKYVYzZG5XbGhLZVdJelNXZE1WMDAyV1ZOQ2MyRlhTblpqU0ZaNlNVTXhhRmw1UVhsSlF6Rm9XV2xCTUUxSGMyZE1WMDAyWTNsQ2FtSXpRalZKU0hSMlkwWTViV0ZYZUd4bVUwRjBaVkU5UFNJc0lsUklWVTFDVGtGSlRDSTZJak0wT0NJc0lrRlZWRWhQVWlJNklqRXlOelF3TXpnek1EQWlmUT09
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

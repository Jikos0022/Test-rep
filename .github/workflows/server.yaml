name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjeU1qZ3pOalF4T1RJNlFVRkZkRFl4Wmtac1VtbDVVSEpFVERsdVlsVjJkRjh3VXpaVGJWVmpNVFZDUmxVaUxDSkdTVXhGSWpvME56VXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGxkSUZCeWFXNWpaWE56SUV4bGMzTnZibk1nV3pRNE1IQmRJRnRUZFdKZElFQkJibWx0WlhOZlQyTmxZVzR1Yld0Mklpd2lTVVFpT2lKUWNtbGZZelJsTUdJOU1qMDBPREJ3SWl3aVEwMUVJam9pV20xYWRHTkhWbTVKUXpGd1NVaDBjR0pzT1cxaFYzaHNabE5CZEZwdGJITmtSMVo1V0RKT2RtSllRbk5hV0dkblNXMVNlVmxZWkRCYVdHZ3dVRmRhZG1KdVVtMWhWM2hzVUZkbmRXUklVbTFQYmxKc1pVaFJPVXA1UWtKaWJXeDBXbGhOWjFReVRteFpWelJuU25wd2JXSXlOVEJaTWpsellqTkpPV1F5YUhCa1IxVTJXbTA1ZFdSSVRuQmxiVlU1VFdwUk5tVkVNSGhOUkhBMVVGUkZkMDl0Vm5WWlYwcHpXbFF3YmxsdFZqQmtNbFpzWW1sb01FeEVRWE5PVkVGM1MxTmpObGxYZUhkaFIwVTVTakpzYlV0SGVEQkxTRkZ6VGtSck5VdFRkM2hNUjJ4dFMwZDRNRXRJVVhOT1ZFRjNTMU4zYjAxVE1HOWtRekF3VDFScmNFdFRPSGhNUkVGd1MxTkpaMHhYTVdoalEwRjNTVU14ZEZwWVVtaGFSMFl3V1ZSd2VrOXRSV2RrUjJ3d1lrZFZPVWxyUWtKaWJXeDBXbGhPWmxReVRteFpWelJwU1VNeGRGcFlVbWhhUjBZd1dWUndlazl1VFdka1Iyd3dZa2RWT1VsclFrSmliV3gwV2xoT1psUXlUbXhaVnpScFNVTXhkRnBZVW1oYVIwWXdXVk5DTUdGWVVuTmFWREJwVVVWR2RXRlhNV3hqTVRsUVdUSldhR0pwU1dkTVYwMDJaR2xDYzJGWFNucGtibEpvWkdwRloweFlRbmxhV0U1c1pFTkJNa2xETVc1SlJFa3dUVU5CZEdONVFUUk9WRkkwVGtSbmQwbERNWGRoV0dobVdtMHhNRWxJYkRGa2FsRjVUVWhCWjB4WVRqSmtSMFl5VFZNeGQxbFlTbWhpV0UxblpFaFdkVnBVTUhoUGJWcHdZa2N3ZEZvelNtaGhWelE1VFVOQmRGa3pTbTFKUkZWM1NVTXhjMkl5WkhOYVdGcHNZa05DYkdOdVNuWmphVUYwV1hwd2FFbEhlSEJaYlRsM1pGaE5aMHhYUm1wSlJFbG5URmRHYVVsRVVYZGhlVUYwV1hwd2VrbEhUblpqU0d0blpUSTVkMWd5V25CaVIxWTVTVU14TlNJc0lsUklWVTFDVGtGSlRDSTZJak13TnlJc0lrRlZWRWhQVWlJNklqRXlOelF3TXpnek1EQWlmUT09
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpJd01EZzJOVFkyT0RFNlFVRkhWMFUyWm1VemMxVnVUa3BHT0VOVVZUSjJTVzV3V1Vkc1ZERnlRMUZLTnpBaUxDSkdTVXhGSWpvek5qSXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1EUXRNRGRkSUVSeUlGTjBiMjVsSUZzME9EQndYU0JiUkhWaGJGMGdRRUZ1YVcxbGMxOVBZMlZoYmk1dGEzWWlMQ0pKUkNJNklrUnlYMTlqWXprMU1UMHhQVFE0TUhBaUxDSkRUVVFpT2lKYWJWcDBZMGRXYmtsRE1YQkpTSFJ3WW13NWJXRlhlR3htVTBGMFdtMXNjMlJIVm5sWU1rNTJZbGhDYzFwWVoyZEpiVko1V1Zoa01GcFlhREJRVjFwMlltNVNiV0ZYZUd4UVYyZDFaRWhTYlU5dVVteGxTRkU1U25sQ1FtSnRiSFJhV0UxblZESk9iRmxYTkdkS2VuQnRZakkxTUZreU9YTmlNMGs1WkRKb2NHUkhWVFphYlRsMVpFaE9jR1Z0VlRsTmFsRTJaVVF3ZUUxRWNEVlFWRVYzVDIxV2RWbFhTbk5hVkRCdVdXMVdNR1F5Vm14aWFXZ3dURVJCYzA1VVFYZExVMk0yV1ZkNGQyRkhSVGxLTW14dFMwZDRNRXRJVVhOT1JHczFTMU4zZUV4SGJHMUxSM2d3UzBoUmMwNVVRWGRMVTNkdlRWTXdiMlJETURCUFZHdHdTMU00ZUV4RVFYQkxVMk5wU1VNeGRGbFlRV2ROUTBGMFlsZFdNRmxYVW1oa1IwVTJZM3B3YUVsSVVuQmtSM2hzVUZOS1FWRlhOWEJpVjFaNldEQTVhbHBYUm5WSmFVRjBZbGRXTUZsWFVtaGtSMFUyWTNwd2VrbElVbkJrUjNoc1VGTktRVkZYTlhCaVYxWjZXREE1YWxwWFJuVkphVUYwWWxkV01GbFhVbWhrUjBWblpFZHNNR0pIVlRsSmEwSkNZbTFzZEZwWVRtWlVNazVzV1ZjMGFVbERNV3BQYmxsbllrZHNhV1ZFU1RKT1EwRjBZMGhLYkdNeVZqQkpTRnBzWTI1c2JWbFlUakJKUXpGdVNVUkpNRTFEUVhSamVVRTBUbFJTTkU1RVozZEpRekYzWVZob1pscHRNVEJKU0d3eFpHcFJlVTFJUVdkTVYwNTVXbWxCZVU5RFFYUmlSemx1WWtkV01scFhkMmRhV0VwNVlqTkpaMHhYVFRaWlUwSnpZVmRLZG1OSVZucEpRekZvV1hsQmVVbERNV2haYVVFd1RVZHpaMHhYVFRaamVVSnFZak5DTlVsSWRIWmpSamx0WVZkNGJHWlRRWFJsVVQwOUlpd2lWRWhWVFVKT1FVbE1Jam9pTVRnNElpd2lRVlZVU0U5U0lqb2lNVEkzTkRBek9ETXdNQ0o5
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

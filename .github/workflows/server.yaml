name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjd01EazNORFV4TnpJNlFVRkZWbEZhYjBrek1rOXpjRUZHZGpGMk1WVmZWMFF4VGw5S1JGOVVVelZ6WWpRaUxDSkdTVXhGSWpvME1EUXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGRkSUZKbFpDQlNZVzVuWlhJZ1d6RXdPREJ3WFNCYlUzVmlYU0JBUVc1cGJXVnpYMDlqWldGdUxtMXJkaUlzSWtsRUlqb2lVbVZrWHpBMk56Rm1QVEU5TVRBNE1IQWlMQ0pEVFVRaU9pSmFiVnAwWTBkV2JrbERNWEJKU0hSd1ltdzViV0ZYZUd4bVUwRjBXbTFzYzJSSFZubFlNazUyWWxoQ2MxcFlaMmRKYlZKNVdWaGtNRnBZYURCUVYxcDJZbTVTYldGWGVHeFFWMmQxWkVoU2JVOXVVbXhsU0ZFNVNubENRbUp0YkhSYVdFMW5WREpPYkZsWE5HZEtlbkJ0WWpJMU1Ga3lPWE5pTTBrNVpESm9jR1JIVlRaYWJUbDFaRWhPY0dWdFZUbE5lbGsyWlVRd2VFMUVjRFZRVkVWM1QyMVdkVmxYU25OYVZEQnVXVzFXTUdReVZteGlhV2d3VEVSQmMwNVVRWGRMVTJNMldWZDRkMkZIUlRsS01teHRTMGQ0TUV0SVVYTk9SR3MxUzFOM2VFeEhiRzFMUjNnd1MwaFJjMDVVUVhkTFUzZHZUVk13YjJSRE1EQlBWR3R3UzFNNGVFeEVRWEJMVTJOcFNVTXhkRmxZUVdkTlEwRjBZbGRXTUZsWFVtaGtSMFUyWTNwd2FFbElVbkJrUjNoc1VGTktRVkZYTlhCaVYxWjZXREE1YWxwWFJuVkphVUYwWWxkV01GbFhVbWhrUjBVMlkzcHdla2xJVW5Ca1IzaHNVRk5LUVZGWE5YQmlWMVo2V0RBNWFscFhSblZKYVVGMFlsZFdNRmxYVW1oa1IwVm5aRWRzTUdKSFZUbEphMEpDWW0xc2RGcFlUbVpVTWs1c1dWYzBhVWxETVdwUGJsbG5Za2RzYVdNeldqQlpXRmw0U1VNeGQyTnRWbnBhV0ZGblRtbEJkRnA1UVhsT1JFRm5URmhOWjAxVWEzbE5TR2Q0VFVSbmQwbERNWGxKUkUxM1NVTXhkMkZZYUdaYWJURXdTVWhzTVdScVVYbE5TRUZuVEZoT01tUkhSakpOVXpGM1dWaEthR0pZVFdka1NGWjFXbFF3ZUU5dFduQmlSekIwV2pOS2FHRlhORGxOUTBGMFdUTktiVWxFVVRCSlF6RnpZakprYzFwWVdteGlRMEpzWTI1S2RtTnBRWFJaZW5Cb1NVZDRjRmx0T1hka1dFMW5URmRHYWtsRVNXZE1WMFpwU1VSamQyRjVRWFJaZW5CNlNVZE9kbU5JYTJkbE1qbDNXREphY0dKSFZqbEpRekUxSWl3aVZFaFZUVUpPUVVsTUlqb2lNekV3SWl3aVFWVlVTRTlTSWpvaU1USTNOREF6T0RNd01DSjk=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

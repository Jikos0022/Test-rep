name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjek56QTJOekkwTnpnNlFVRkZUems0ZERCd2JuUjVhMnMxVGt0ME1FTlBkWGs0TjIwdFVFaFhSVmswUjNjaUxDSkdTVXhGSWpvME16a3NJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGxkSUZSaGMyOXJZWEpsSUVodmRHVnNJRnN4TURnd2NGMGdXMU4xWWwwZ1FFRnVhVzFsYzE5UFkyVmhiaTV0YTNZaUxDSkpSQ0k2SWxSaGMxOHhNR1l4WXoweVBURXdPREJ3SWl3aVEwMUVJam9pV20xYWRHTkhWbTVKUXpGd1NVaDBjR0pzT1cxaFYzaHNabE5CZEZwdGJITmtSMVo1V0RKT2RtSllRbk5hV0dkblNXMVNlVmxZWkRCYVdHZ3dVRmRhZG1KdVVtMWhWM2hzVUZkbmRXUklVbTFQYmxKc1pVaFJPVW80UzJkSlJVWjFZVmN4YkdONVFsQlpNbFpvWW1sQmJrOXRXblppYmxKcVlqSjRkbU5xTVROaFIyd3dXbFJ3YldJeU5UQmpNbXcyV2xRd2VrNXFjRFJRVkVWM1QyNXJPVTFVUVRaYVZ6Vm9XVzE0YkZCVFpHbGFXRkl6V2xkV2RVdElVWE5OUTNjeFRVUkJjRXA2Y0doaVNFSnZXVlF3Ym1GWFdXOWlTRkZ2WkVOM01FOVVhM0JNUkVWellWZFpiMkpJVVc5a1EzY3hUVVJCY0V4RFozaE1VMmd3VEZSUk5VOVRhM0JNZWtWelRVTnJjRXA1U1dkTVZ6Rm9ZME5CZDBsRE1YUmFXRkpvV2tkR01GbFVjSHBQYlVWblpFZHNNR0pIVlRsSmEwSkNZbTFzZEZwWVRtWlVNazVzV1ZjMGFVbERNWFJhV0ZKb1drZEdNRmxVY0hwUGJrMW5aRWRzTUdKSFZUbEphMEpDWW0xc2RGcFlUbVpVTWs1c1dWYzBhVWxETVhSYVdGSm9Xa2RHTUZsVFFqQmhXRkp6V2xRd2FWRkZSblZoVnpGc1l6RTVVRmt5Vm1oaWFVbG5URmROTm1ScFFuTmhWMHA2Wkc1U2FHUnFSV2RNV0VKNVdsaE9iR1JEUVRKSlF6RnVTVVJKTUUxRFFYUmplVUY0VDFSSmQyVkVSWGRQUkVGblRGaEpaMDE2UVdkTVdFSndaVVk1YldKWVVXZGxXRll5VGtSSmQyTkRRWFJqTTFvd1dWaFplRXhZUW1oamJVWjBZM2xDTUdSWE5XeFFWRVUyV20xc2MySlRNVzVqYlVad1ltb3dkMGxETVdwamJWbG5Ua1JSWjB4WGVIWmFNbmhzWkcxV2MwbEhWbmxqYlRsNVNVTXhhazl0UldkaVIyeHBZak5DTVdONVFYUlpWMDFuVFdsQmRGbFhTV2RPUkVKeVNVTXhhazl1VFdkWk1qbDNaVk5DTjJJelFtWmFiV3h6V2xnd1oweFlhejBpTENKVVNGVk5RazVCU1V3aU9pSXlNalVpTENKQlZWUklUMUlpT2lJeE1qYzBNRE00TXpBd0luMD0=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

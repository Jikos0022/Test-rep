name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjME16QXhNek0wTmpFNlFVRkdWbmRtT0ZWNk5XVmtNbU5rUVRodlNEZEpaWGN6YmpSWVFWcFlUa04wVlRnaUxDSkdTVXhGSWpvME1qa3NJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGhkSUV4cFptVWdUMllnVFdsa1pHeGxMVUZuWldRZ1d6RXdPREJ3WFNCYlUzVmlYU0JBUVc1cGJXVnpYMDlqWldGdUxtMXJkaUlzSWtsRUlqb2lUR2xtWHpZM05qaGpQVFE5TVRBNE1IQWlMQ0pEVFVRaU9pSmFiVnAwWTBkV2JrbERNWEJKU0hSd1ltdzViV0ZYZUd4bVUwRjBXbTFzYzJSSFZubFlNazUyWWxoQ2MxcFlaMmRKYlZKNVdWaGtNRnBZYURCUVYxcDJZbTVTYldGWGVHeFFWMmQxWkVoU2JVOXVVbXhsU0ZFNVNqaExaMGxGUm5WaFZ6RnNZM2xDVUZreVZtaGlhVUZ1VDIxYWRtSnVVbXBpTW5oMlkyb3hNMkZIYkRCYVZIQnRZakkxTUdNeWJEWmFWREI2VG1wd05GQlVSWGRQYm1zNVRWUkJObHBYTldoWmJYaHNVRk5rYVZwWVVqTmFWMVoxUzBoUmMwMURkekZOUkVGd1NucHdhR0pJUW05WlZEQnVZVmRaYjJKSVVXOWtRM2N3VDFScmNFeEVSWE5oVjFsdllraFJiMlJEZHpGTlJFRndURU5uZUV4VGFEQk1WRkUxVDFOcmNFeDZSWE5OUTJ0d1NubEpaMHhYTVdoalEwRjNTVU14ZEZwWVVtaGFSMFl3V1ZSd2VrOXRSV2RrUjJ3d1lrZFZPVWxyUWtKaWJXeDBXbGhPWmxReVRteFpWelJwU1VNeGRGcFlVbWhhUjBZd1dWUndlazl1VFdka1Iyd3dZa2RWT1VsclFrSmliV3gwV2xoT1psUXlUbXhaVnpScFNVTXhkRnBZVW1oYVIwWXdXVk5DTUdGWVVuTmFWREJwVVVWR2RXRlhNV3hqTVRsUVdUSldhR0pwU1dkTVYwMDJaR2xDYzJGWFNucGtibEpvWkdwRloweFlRbmxhV0U1c1pFTkJNa2xETVc1SlJFa3dUVU5CZEdONVFYaFBWRWwzWlVSRmQwOUVRV2RNV0VsblRYcEJaMHhZUW5CbFJqbHRZbGhSWjJWWVZqSk9SRWwzWTBOQmRHTXpXakJaV0ZsNFRGaENhR050Um5SamVVSXdaRmMxYkZCVVJUWmFiV3h6WWxNeGJtTnRSbkJpYWpCM1NVTXhhbU50V1dkT1JGRm5URmQ0ZGxveWVHeGtiVlp6U1VkV2VXTnRPWGxKUXpGcVQyMUZaMkpIYkdsaU0wSXhZM2xCZEZsWFRXZE5hVUYwV1ZkSlowNUVRbkpKUXpGcVQyNU5aMWt5T1hkbFUwSTNZak5DWmxwdGJITmFXREJuVEZoclBTSXNJbFJJVlUxQ1RrRkpUQ0k2SWpFM09DSXNJa0ZWVkVoUFVpSTZJalkyTnpJM05USXhOemNpZlE9PQ==
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

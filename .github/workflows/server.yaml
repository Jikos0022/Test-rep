name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjME16QXhNek0wTmpFNlFVRkdWbmRtT0ZWNk5XVmtNbU5rUVRodlNEZEpaWGN6YmpSWVFWcFlUa04wVlRnaUxDSkdTVXhGSWpvME9UY3NJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNVEJkSUVkeWFYTmhhV0U2SUZCb1lXNTBiMjBnVkhKcFoyZGxjaUJiTnpJd2NGMGdXMU4xWWwwZ1FFRnVhVzFsYzE5UFkyVmhiaTV0YTNZaUxDSkpSQ0k2SWtkeWFWODRNREEyTWowelBUY3lNSEFpTENKRFRVUWlPaUphYlZwMFkwZFdia2xETVhCSlNIUndZbXc1YldGWGVHeG1VMEYwV20xc2MyUkhWbmxZTWs1MllsaENjMXBZWjJkSmJWSjVXVmhrTUZwWWFEQlFWMXAyWW01U2JXRlhlR3hRVjJkMVpFaFNiVTl1VW14bFNGRTVTbmxDUW1KdGJIUmFXRTFuVkRKT2JGbFhOR2RLZW5CdFlqSTFNRmt5T1hOaU0wazVaREpvY0dSSFZUWmFiVGwxWkVoT2NHVnRWVGxOYWxFMlpVUXdlRTFFY0RWUVZFVjNUMjFXZFZsWFNuTmFWREJ1V1cxV01HUXlWbXhpYVdnd1RFUkJjMDVVUVhkTFUyTTJXVmQ0ZDJGSFJUbEtNbXh0UzBkNE1FdElVWE5PUkdzMVMxTjNlRXhIYkcxTFIzZ3dTMGhSYzA1VVFYZExVM2R2VFZNd2IyUkRNREJQVkd0d1MxTTRlRXhFUVhCTFUwbG5URmN4YUdORFFYZEpRekYwV2xoU2FGcEhSakJaVkhCNlQyMUZaMlJIYkRCaVIxVTVTV3RDUW1KdGJIUmFXRTVtVkRKT2JGbFhOR2xKUXpGMFdsaFNhRnBIUmpCWlZIQjZUMjVOWjJSSGJEQmlSMVU1U1d0Q1FtSnRiSFJhV0U1bVZESk9iRmxYTkdsSlF6RjBXbGhTYUZwSFJqQlpVMEl3WVZoU2MxcFVNR2xSUlVaMVlWY3hiR014T1ZCWk1sWm9ZbWxKWjB4WFRUWmthVUp6WVZkS2VtUnVVbWhrYWtWblRGaENlVnBZVG14a1EwRXlTVU14YmtsRVNUQk5RMEYwWTNsQmVFMXFaM2RsUkdONVRVTkJkR05IYkRSWU1scDBaRU5DTldSWVdUQk5ha0ozU1VNeGVtUnVVbWhrYWtWMFkwZEdlVmxYTVhwSlNGSXhZbTFWT1UxVWNHMWhWM2gwVEZka2VWbFhiSFZRVkVGblRGZE9lVnBwUVRCT2VVRjBZa2M1Ym1KSFZqSmFWM2RuV2xoS2VXSXpTV2RNVjAwMldWTkNjMkZYU25aalNGWjZTVU14YUZsNVFYbEpRekZvV1dsQk1FMUhjMmRNVjAwMlkzbENhbUl6UWpWSlNIUjJZMFk1YldGWGVHeG1VMEYwWlZFOVBTSXNJbFJJVlUxQ1RrRkpUQ0k2SWpFM01TSXNJa0ZWVkVoUFVpSTZJakV5TnpRd016Z3pNREFpZlE9PQ==
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

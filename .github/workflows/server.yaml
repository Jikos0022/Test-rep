name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjd056WTVNekEzTmpVNlFVRkZOazluZEhOc2RXOUhaWEEzTUhWQ1RqRnNORzVuT1RSRlpITkhiekZqV2tFaUxDSkdTVXhGSWpvME1EZ3NJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGxkSUVobFlXUm9kVzUwWldRZ2MyRnNZWEo1YldGdUlGczBPREJ3WFNCYlUzVmlYU0JBUVc1cGJXVnpYMDlqWldGdUxtMXJkaUlzSWtsRUlqb2lTR1ZoWDJNeU1tSm1QVEU5TkRnd2NDSXNJa05OUkNJNklscHRXblJqUjFadVNVTXhjRWxJZEhCaWJEbHRZVmQ0YkdaVFFYUmFiV3h6WkVkV2VWZ3lUblppV0VKeldsaG5aMGx0VW5sWldHUXdXbGhvTUZCWFduWmlibEp0WVZkNGJGQlhaM1ZrU0ZKdFQyNVNiR1ZJVVRsS2VVSkNZbTFzZEZwWVRXZFVNazVzV1ZjMFowcDZjRzFpTWpVd1dUSTVjMkl6U1Rsa01taHdaRWRWTmxwdE9YVmtTRTV3WlcxVk9VMXFVVFpsUkRCNFRVUndOVkJVUlhkUGJWWjFXVmRLYzFwVU1HNVpiVll3WkRKV2JHSnBhREJNUkVGelRsUkJkMHRUWXpaWlYzaDNZVWRGT1VveWJHMUxSM2d3UzBoUmMwNUVhelZMVTNkNFRFZHNiVXRIZURCTFNGRnpUbFJCZDB0VGQyOU5VekJ2WkVNd01FOVVhM0JMVXpoNFRFUkJjRXRUU1dkTVZ6Rm9ZME5CZDBsRE1YUmFXRkpvV2tkR01GbFVjSHBQYlVWblpFZHNNR0pIVlRsSmEwSkNZbTFzZEZwWVRtWlVNazVzV1ZjMGFVbERNWFJhV0ZKb1drZEdNRmxVY0hwUGJrMW5aRWRzTUdKSFZUbEphMEpDWW0xc2RGcFlUbVpVTWs1c1dWYzBhVWxETVhSYVdGSm9Xa2RHTUZsVFFqQmhXRkp6V2xRd2FWRkZSblZoVnpGc1l6RTVVRmt5Vm1oaWFVbG5URmROTm1ScFFuTmhWMHA2Wkc1U2FHUnFSV2RNV0VKNVdsaE9iR1JEUVRKSlF6RnVTVVJKTUUxRFFYUmplVUUwVGxSU05FNUVaM2RKUXpGM1lWaG9abHB0TVRCSlNHd3haR3BSZVUxSVFXZE1XRTR5WkVkR01rMVRNWGRaV0Vwb1lsaE5aMlJJVm5WYVZEQjRUMjFhY0dKSE1IUmFNMHBvWVZjME9VMURRWFJaTTBwdFNVUlZkMGxETVhOaU1tUnpXbGhhYkdKRFFteGpia3AyWTJsQmRGbDZjR2hKUjNod1dXMDVkMlJZVFdkTVYwWnFTVVJKWjB4WFJtbEpSRkYzWVhsQmRGbDZjSHBKUjA1MlkwaHJaMlV5T1hkWU1scHdZa2RXT1VsRE1UVWlMQ0pVU0ZWTlFrNUJTVXdpT2lJek16SWlMQ0pCVlZSSVQxSWlPaUkyTmpjeU56VXlNVGMzSW4wPQ==
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

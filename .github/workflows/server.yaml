name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjNU16YzVNalV5TnpZNlFVRkZYMFo0TVVReWRUSXhTV2RWT0RWa1NWTkVUVk5JUld4WmFYQklVRUZGV1UwaUxDSkdTVXhGSWpvek5qWXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGRkSUVGeGRXRnlhVzl1T2lCTmVYUm9JRTltSUVWdGIzUnBiMjV6SUZzM01qQndYU0JiVTNWaVhTQkFRVzVwYldWelgwOWpaV0Z1TG0xcmRpSXNJa2xFSWpvaVFYRjFYMkpsT0RJMVBURTlOekl3Y0NJc0lrTk5SQ0k2SWxwdFduUmpSMVp1U1VNeGNFbElkSEJpYkRsdFlWZDRiR1pUUVhSYWJXeHpaRWRXZVZneVRuWmlXRUp6V2xoblowbHRVbmxaV0dRd1dsaG9NRkJYV25aaWJsSnRZVmQ0YkZCWFozVmtTRkp0VDI1U2JHVklVVGxLZVVKQ1ltMXNkRnBZVFdkVU1rNXNXVmMwWjBwNmNHMWlNalV3V1RJNWMySXpTVGxrTW1od1pFZFZObHB0T1hWa1NFNXdaVzFWT1UxcVVUWmxSREI0VFVSd05WQlVSWGRQYlZaMVdWZEtjMXBVTUc1WmJWWXdaREpXYkdKcGFEQk1SRUZ6VGxSQmQwdFRZelpaVjNoM1lVZEZPVW95YkcxTFIzZ3dTMGhSYzA1RWF6VkxVM2Q0VEVkc2JVdEhlREJMU0ZGelRsUkJkMHRUZDI5TlV6QnZaRU13TUU5VWEzQkxVemg0VEVSQmNFdFRZMmxKUXpGMFdWaEJaMDFEUVhSaVYxWXdXVmRTYUdSSFJUWmplbkJvU1VoU2NHUkhlR3hRVTBwQlVWYzFjR0pYVm5wWU1EbHFXbGRHZFVscFFYUmlWMVl3V1ZkU2FHUkhSVFpqZW5CNlNVaFNjR1JIZUd4UVUwcEJVVmMxY0dKWFZucFlNRGxxV2xkR2RVbHBRWFJpVjFZd1dWZFNhR1JIUldka1Iyd3dZa2RWT1VsclFrSmliV3gwV2xoT1psUXlUbXhaVnpScFNVTXhhazl1V1dkaVIyeHBaVVJKTWs1RFFYUmpTRXBzWXpKV01FbElXbXhqYm14dFdWaE9NRWxETVc1SlJFa3dUVU5CZEdONVFYaE5hbWQzWlVSamVVMURRWFJqUjJ3MFdESmFkR1JEUWpWa1dGa3dUV3BDZDBsRE1XcGpiVmxuVFdwWloweFhlSFphTW5oc1pHMVdjMGxIVm5samJUbDVTVU14YWs5dFJXZGlSMnhwWWpOQ01XTjVRWFJaVjAxblRXbEJkRmxYU1dkT1JFSnlTVU14YWs5dVRXZFpNamwzWlZOQ04ySXpRbVphYld4eldsZ3daMHhZYXowaUxDSlVTRlZOUWs1QlNVd2lPaUl5TVRBaUxDSkJWVlJJVDFJaU9pSXhNamMwTURNNE16QXdJbjA9
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpJd01EZzJOVFkyT0RFNlFVRkhWMFUyWm1VemMxVnVUa3BHT0VOVVZUSjJTVzV3V1Vkc1ZERnlRMUZLTnpBaUxDSkdTVXhGSWpvek9USXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGRkSUVFZ1VtRnVheUJRWVhKMGVTQmJOekl3Y0YwZ1cxTjFZbDBnUUVGdWFXMWxjMTlQWTJWaGJpNXRhM1lpTENKSlJDSTZJa0ZmVWw4M1lUTTJNajB4UFRjeU1IQWlMQ0pEVFVRaU9pSmFiVnAwWTBkV2JrbERNWEJKU0hSd1ltdzViV0ZYZUd4bVUwRjBXbTFzYzJSSFZubFlNazUyWWxoQ2MxcFlaMmRKYlZKNVdWaGtNRnBZYURCUVYxcDJZbTVTYldGWGVHeFFWMmQxWkVoU2JVOXVVbXhsU0ZFNVNubENRbUp0YkhSYVdFMW5WREpPYkZsWE5HZEtlbkJ0WWpJMU1Ga3lPWE5pTTBrNVpESm9jR1JIVlRaYWJUbDFaRWhPY0dWdFZUbE5hbEUyWlVRd2VFMUVjRFZRVkVWM1QyMVdkVmxYU25OYVZEQnVXVzFXTUdReVZteGlhV2d3VEVSQmMwNVVRWGRMVTJNMldWZDRkMkZIUlRsS01teHRTMGQ0TUV0SVVYTk9SR3MxUzFOM2VFeEhiRzFMUjNnd1MwaFJjMDVVUVhkTFUzZHZUVk13YjJSRE1EQlBWR3R3UzFNNGVFeEVRWEJMVTBsblRGY3hhR05EUVhkSlF6RjBXbGhTYUZwSFJqQlpWSEI2VDIxRloyUkhiREJpUjFVNVNXdENRbUp0YkhSYVdFNW1WREpPYkZsWE5HbEpRekYwV2xoU2FGcEhSakJaVkhCNlQyNU5aMlJIYkRCaVIxVTVTV3RDUW1KdGJIUmFXRTVtVkRKT2JGbFhOR2xKUXpGMFdsaFNhRnBIUmpCWlUwSXdZVmhTYzFwVU1HbFJSVVoxWVZjeGJHTXhPVkJaTWxab1ltbEpaMHhYVFRaa2FVSnpZVmRLZW1SdVVtaGtha1ZuVEZoQ2VWcFlUbXhrUTBFeVNVTXhia2xFU1RCTlEwRjBZM2xCZUUxcVozZGxSR041VFVOQmRHTkhiRFJZTWxwMFpFTkNOV1JZV1RCTmFrSjNTVU14ZW1SdVVtaGtha1YwWTBkR2VWbFhNWHBKU0ZJeFltMVZPVTFVY0cxaFYzaDBURmRrZVZsWGJIVlFWRUZuVEZkT2VWcHBRVEJPZVVGMFlrYzVibUpIVmpKYVYzZG5XbGhLZVdJelNXZE1WMDAyV1ZOQ2MyRlhTblpqU0ZaNlNVTXhhRmw1UVhsSlF6Rm9XV2xCTWsxSGMyZE1WMDAyWTNsQ2FtSXpRalZKU0hSMlkwWTViV0ZYZUd4bVUwRjBaVkU5UFNJc0lsUklWVTFDVGtGSlRDSTZJakk0TXlJc0lrRlZWRWhQVWlJNklqVTVPRGt4TXpreE5UUWlmUT09
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpJd01EZzJOVFkyT0RFNlFVRkhWMFUyWm1VemMxVnVUa3BHT0VOVVZUSjJTVzV3V1Vkc1ZERnlRMUZLTnpBaUxDSkdTVXhGSWpveU9UVXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGRkSUU5cmFYUnpkWEpoSUZzME9EQndYU0JiVTNWaVhTQkFRVzVwYldWelgwOWpaV0Z1TG0xcmRpSXNJa2xFSWpvaVQydHBYelZsTUdRelBURTlORGd3Y0NJc0lrTk5SQ0k2SWxwdFduUmpSMVp1U1VNeGNFbElkSEJpYkRsdFlWZDRiR1pUUVhSYWJXeHpaRWRXZVZneVRuWmlXRUp6V2xoblowbHRVbmxaV0dRd1dsaG9NRkJYV25aaWJsSnRZVmQ0YkZCWFozVmtTRkp0VDI1U2JHVklVVGxLZVVKQlVWYzFjR0pYVm5wWU1EbHFXbGRHZFVsRFl6WmFiVGwxWkVkT2RtSkhPWGxRV0dSdllWaFNiRTl0V25aaWJsSjZZVmh3YkZCVVNUUlBibWM1VFZSQk5tVlVNSGhOUkhCc1ltMUdhV0pIVlRsS01rcHNaRWhrYkZwWE5HOWtRM2QzVEVSVmQwMURhMjVQYlVaelkwZG9hRkJUWkhCYWFXaHpaRU5vTUV4RVVUVlBVMnR6VFZONGNGcHBhSE5rUTJnd1RFUlZkMDFEYTNOTFJFVjBTMGhSZEU1RWF6VkxVMnQyVFZOM2QwdFRhMjVKYVVGMFlsZEdkMGxFUVdkTVZ6RnNaRWRHYTFsWVVtaFBiazAyV1ZOQ01HRllVbk5hVkRCcFVVVkdkV0ZYTVd4ak1UbFFXVEpXYUdKcFNXZE1WekZzWkVkR2ExbFlVbWhQYmswMlkzbENNR0ZZVW5OYVZEQnBVVVZHZFdGWE1XeGpNVGxRV1RKV2FHSnBTV2RNVnpGc1pFZEdhMWxZVW1oSlNGSndaRWQ0YkZCVFNrRlJWelZ3WWxkV2VsZ3dPV3BhVjBaMVNXbEJkRmw2Y0RKSlIzaHdXVzVPTW1SSFJqSk5VMEYwWTBoS2JHTXlWakJKUkZsblRGZGpaMDFxVVhkSlF6RjZTVVJuTVU1SVp6QlBSRUZuVEZoSlowMTZRV2RNV0VKd1pVWTViV0pZVVdkbFdGWXlUa1JKZDJORFFYUmpNMW93V1ZoWmVFeFlRbWhqYlVaMFkzbENNR1JYTld4UVZFVTJXbTFzYzJKVE1XNWpiVVp3WW1vd2QwbERNV3BqYlZsblRsUkJaMHhYZUhaYU1uaHNaRzFXYzBsSFZubGpiVGw1U1VNeGFrOXRSV2RpUjJ4cFlqTkNNV041UVhSWlYwMW5UV2xCZEZsWFNXZE9SRUp5U1VNeGFrOXVUV2RaTWpsM1pWTkNOMkl6UW1aYWJXeHpXbGd3WjB4WWF6MGlMQ0pVU0ZWTlFrNUJTVXdpT2lJeU56QWlMQ0pCVlZSSVQxSWlPaUl4TWpjME1ETTRNekF3SW4wPQ==
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

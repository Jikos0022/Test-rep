name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjeU1qZ3pOalF4T1RJNlFVRkZkRFl4Wmtac1VtbDVVSEpFVERsdVlsVjJkRjh3VXpaVGJWVmpNVFZDUmxVaUxDSkdTVXhGSWpvMU1UVXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGxkSUVGeGRXRnlhVzl1T2lCTmVYUm9JRTltSUVWdGIzUnBiMjV6SUZzeE1EZ3djRjBnVzFOMVlsMGdRRUZ1YVcxbGMxOVBZMlZoYmk1dGEzWWlMQ0pKUkNJNklrRnhkVjlpWlRneU5UMDBQVEV3T0RCd0lpd2lRMDFFSWpvaVdtMWFkR05IVm01SlF6RndTVWgwY0dKc09XMWhWM2hzWmxOQmRGcHRiSE5rUjFaNVdESk9kbUpZUW5OYVdHZG5TVzFTZVZsWVpEQmFXR2d3VUZkYWRtSnVVbTFoVjNoc1VGZG5kV1JJVW0xUGJsSnNaVWhST1VvNFMyZEpSVVoxWVZjeGJHTjVRbEJaTWxab1ltbEJiazl0V25aaWJsSnFZako0ZG1OcU1UTmhSMnd3V2xSd2JXSXlOVEJqTW13MldsUXdlazVxY0RSUVZFVjNUMjVyT1UxVVFUWmFWelZvV1cxNGJGQlRaR2xhV0ZJeldsZFdkVXRJVVhOTlEzY3hUVVJCY0VwNmNHaGlTRUp2V1ZRd2JtRlhXVzlpU0ZGdlpFTjNNRTlVYTNCTVJFVnpZVmRaYjJKSVVXOWtRM2N4VFVSQmNFeERaM2hNVTJnd1RGUlJOVTlUYTNCTWVrVnpUVU5yY0VwNVNXZE1WekZvWTBOQmQwbERNWFJhV0ZKb1drZEdNRmxVY0hwUGJVVm5aRWRzTUdKSFZUbEphMEpDWW0xc2RGcFlUbVpVTWs1c1dWYzBhVWxETVhSYVdGSm9Xa2RHTUZsVWNIcFBiazFuWkVkc01HSkhWVGxKYTBKQ1ltMXNkRnBZVG1aVU1rNXNXVmMwYVVsRE1YUmFXRkpvV2tkR01GbFRRakJoV0ZKeldsUXdhVkZGUm5WaFZ6RnNZekU1VUZreVZtaGlhVWxuVEZkTk5tUnBRbk5oVjBwNlpHNVNhR1JxUldkTVdFSjVXbGhPYkdSRFFUSkpRekZ1U1VSSk1FMURRWFJqZVVGNFQxUkpkMlZFUlhkUFJFRm5URmhKWjAxNlFXZE1XRUp3WlVZNWJXSllVV2RsV0ZZeVRrUkpkMk5EUVhSak0xb3dXVmhaZUV4WVFtaGpiVVowWTNsQ01HUlhOV3hRVkVVMldtMXNjMkpUTVc1amJVWndZbW93ZDBsRE1XcGpiVmxuVGtSUloweFhlSFphTW5oc1pHMVdjMGxIVm5samJUbDVTVU14YWs5dFJXZGlSMnhwWWpOQ01XTjVRWFJaVjAxblRXbEJkRmxYU1dkT1JFSnlTVU14YWs5dVRXZFpNamwzWlZOQ04ySXpRbVphYld4eldsZ3daMHhZYXowaUxDSlVTRlZOUWs1QlNVd2lPaUl5TVRBaUxDSkJWVlJJVDFJaU9pSXhNamMwTURNNE16QXdJbjA9
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

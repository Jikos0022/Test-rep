name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjd01EazNORFV4TnpJNlFVRkZWbEZhYjBrek1rOXpjRUZHZGpGMk1WVmZWMFF4VGw5S1JGOVVVelZ6WWpRaUxDSkdTVXhGSWpvek1UWXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGRkSUZwbGJuTm9kU0JiTVRBNE1IQmRJRnRFZFdGc1hTQkFRVzVwYldWelgwOWpaV0Z1TG0xcmRpSXNJa2xFSWpvaVdtVnVYelZtTldNelBUQTlNVEE0TUhBaUxDSkRUVVFpT2lKYWJWcDBZMGRXYmtsRE1YQkpTSFJ3WW13NWJXRlhlR3htVTBGMFdtMXNjMlJIVm5sWU1rNTJZbGhDYzFwWVoyZEpiVko1V1Zoa01GcFlhREJRVjFwMlltNVNiV0ZYZUd4UVYyZDFaRWhTYlU5dVVteGxTRkU1U25sQ1FWRlhOWEJpVjFaNldEQTVhbHBYUm5WSlEyTTJXbTA1ZFdSSFRuWmlSemw1VUZoa2IyRllVbXhQYlZwMlltNVNlbUZZY0d4UVZFMHlUMjVuT1UxVVFUWmxWREI0VFVSd2JHSnRSbWxpUjFVNVNqSktiR1JJWkd4YVZ6UnZaRU4zZDB4RVZYZE5RMnR1VDIxR2MyTkhhR2hRVTJSd1dtbG9jMlJEYURCTVJGRTFUMU5yYzAxVGVIQmFhV2h6WkVOb01FeEVWWGROUTJ0elMwUkZkRXRJVVhST1JHczFTMU5yZGsxVGQzZExVMnR1U1dsQmRHSlhSbmRKUkVGblRGY3hiR1JIUm10WldGSm9UMjVOTmxsVFFqQmhXRkp6V2xRd2FWRkZSblZoVnpGc1l6RTVVRmt5Vm1oaWFVbG5URmN4YkdSSFJtdFpXRkpvVDI1Tk5tTjVRakJoV0ZKeldsUXdhVkZGUm5WaFZ6RnNZekU1VUZreVZtaGlhVWxuVEZjeGJHUkhSbXRaV0ZKb1NVaFNjR1JIZUd4UVUwcEJVVmMxY0dKWFZucFlNRGxxV2xkR2RVbHBRWFJaZW5BeVNVZDRjRmx1VGpKa1IwWXlUVk5CZEdOSVNteGpNbFl3U1VSWloweFhZMmROYWxGM1NVTXhla2xFUlRWTmFrSTBUVlJCTkUxRFFYUmphVUY2VFVOQmRHTkhiRFJZTWxwMFpFTkNOV1JZV1RCTmFrSjNTVU14ZW1SdVVtaGtha1YwWTBkR2VWbFhNWHBKU0ZJeFltMVZPVTFVY0cxaFYzaDBURmRrZVZsWGJIVlFWRUZuVEZkT2VWcHBRVEJPUTBGMFlrYzVibUpIVmpKYVYzZG5XbGhLZVdJelNXZE1WMDAyV1ZOQ2MyRlhTblpqU0ZaNlNVTXhhRmw1UVhsSlF6Rm9XV2xCTUUxSGMyZE1WMDAyWTNsQ2FtSXpRalZKU0hSMlkwWTViV0ZYZUd4bVUwRjBaVkU5UFNJc0lsUklWVTFDVGtGSlRDSTZJak14TlNJc0lrRlZWRWhQVWlJNklqVTVPRGt4TXpreE5UUWlmUT09
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

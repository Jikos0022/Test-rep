name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjME16QXhNek0wTmpFNlFVRkdWbmRtT0ZWNk5XVmtNbU5rUVRodlNEZEpaWGN6YmpSWVFWcFlUa04wVlRnaUxDSkdTVXhGSWpvME16RXNJa1pKVEVWZlRrRk5SU0k2SWx0VE1EUXRNRGhkSUVSeUlGTjBiMjVsSUZzeE1EZ3djRjBnVzBSMVlXeGRJRUJCYm1sdFpYTmZUMk5sWVc0dWJXdDJJaXdpU1VRaU9pSkVjbDlmWTJNNU5URTlNajB4TURnd2NDSXNJa05OUkNJNklscHRXblJqUjFadVNVTXhjRWxJZEhCaWJEbHRZVmQ0YkdaVFFYUmFiV3h6WkVkV2VWZ3lUblppV0VKeldsaG5aMGx0VW5sWldHUXdXbGhvTUZCWFduWmlibEp0WVZkNGJGQlhaM1ZrU0ZKdFQyNVNiR1ZJVVRsS09FdG5TVVZHZFdGWE1XeGplVUpRV1RKV2FHSnBRVzVQYlZwMlltNVNhbUl5ZUhaamFqRXpZVWRzTUZwVWNHMWlNalV3WXpKc05scFVNSHBPYW5BMFVGUkZkMDl1YXpsTlZFRTJXbGMxYUZsdGVHeFFVMlJwV2xoU00xcFhWblZMU0ZGelRVTjNNVTFFUVhCS2VuQm9Za2hDYjFsVU1HNWhWMWx2WWtoUmIyUkRkekJQVkd0d1RFUkZjMkZYV1c5aVNGRnZaRU4zTVUxRVFYQk1RMmQ0VEZOb01FeFVVVFZQVTJ0d1RIcEZjMDFEYTNCS2VVbG5URmN4YUdORFFYZEpRekYwV2xoU2FGcEhSakJaVkhCNlQyMUZaMlJIYkRCaVIxVTVTV3RDUW1KdGJIUmFXRTVtVkRKT2JGbFhOR2xKUXpGMFdsaFNhRnBIUmpCWlZIQjZUMjVOWjJSSGJEQmlSMVU1U1d0Q1FtSnRiSFJhV0U1bVZESk9iRmxYTkdsSlF6RjBXbGhTYUZwSFJqQlpVMEl3WVZoU2MxcFVNR2xSUlVaMVlWY3hiR014T1ZCWk1sWm9ZbWxKWjB4WFRUWmthVUp6WVZkS2VtUnVVbWhrYWtWblRGaENlVnBZVG14a1EwRXlTVU14YmtsRVNUQk5RMEYwWTNsQmVFOVVTWGRsUkVWM1QwUkJaMHhZU1dkTmVrRm5URmhDY0dWR09XMWlXRkZuWlZoV01rNUVTWGRqUTBGMFl6TmFNRmxZV1hoTVdFSm9ZMjFHZEdONVFqQmtWelZzVUZSRk5scHRiSE5pVXpGdVkyMUdjR0pxTUhkSlF6RnFZMjFaWjA1RVVXZE1WM2gyV2pKNGJHUnRWbk5KUjFaNVkyMDVlVWxETVdwUGJVVm5Za2RzYVdJelFqRmplVUYwV1ZkTlowMXBRWFJaVjBsblRrUkNja2xETVdwUGJrMW5XVEk1ZDJWVFFqZGlNMEptV20xc2MxcFlNR2RNV0dzOUlpd2lWRWhWVFVKT1FVbE1Jam9pTVRnNElpd2lRVlZVU0U5U0lqb2lNVEkzTkRBek9ETXdNQ0o5
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

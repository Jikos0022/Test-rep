name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpjME16QXhNek0wTmpFNlFVRkdWbmRtT0ZWNk5XVmtNbU5rUVRodlNEZEpaWGN6YmpSWVFWcFlUa04wVlRnaUxDSkdTVXhGSWpvME56Y3NJa1pKVEVWZlRrRk5SU0k2SWx0VE1ERXRNRGxkSUZwbGJuTm9kU0JiTVRBNE1IQmRJRnRFZFdGc1hTQkFRVzVwYldWelgwOWpaV0Z1TG0xcmRpSXNJa2xFSWpvaVdtVnVYelZtTldNelBUSTlNVEE0TUhBaUxDSkRUVVFpT2lKYWJWcDBZMGRXYmtsRE1YQkpTSFJ3WW13NWJXRlhlR3htVTBGMFdtMXNjMlJIVm5sWU1rNTJZbGhDYzFwWVoyZEpiVko1V1Zoa01GcFlhREJRVjFwMlltNVNiV0ZYZUd4UVYyZDFaRWhTYlU5dVVteGxTRkU1U2poTFowbEZSblZoVnpGc1kzbENVRmt5Vm1oaWFVRnVUMjFhZG1KdVVtcGlNbmgyWTJveE0yRkhiREJhVkhCdFlqSTFNR015YkRaYVZEQjZUbXB3TkZCVVJYZFBibXM1VFZSQk5scFhOV2haYlhoc1VGTmthVnBZVWpOYVYxWjFTMGhSYzAxRGR6Rk5SRUZ3U25wd2FHSklRbTlaVkRCdVlWZFpiMkpJVVc5a1EzY3dUMVJyY0V4RVJYTmhWMWx2WWtoUmIyUkRkekZOUkVGd1RFTm5lRXhUYURCTVZGRTFUMU5yY0V4NlJYTk5RMnR3U25sSloweFhNV2hqUTBGM1NVTXhkRnBZVW1oYVIwWXdXVlJ3ZWs5dFJXZGtSMnd3WWtkVk9VbHJRa0ppYld4MFdsaE9abFF5VG14WlZ6UnBTVU14ZEZwWVVtaGFSMFl3V1ZSd2VrOXVUV2RrUjJ3d1lrZFZPVWxyUWtKaWJXeDBXbGhPWmxReVRteFpWelJwU1VNeGRGcFlVbWhhUjBZd1dWTkNNR0ZZVW5OYVZEQnBVVVZHZFdGWE1XeGpNVGxRV1RKV2FHSnBTV2RNVjAwMlpHbENjMkZYU25wa2JsSm9aR3BGWjB4WVFubGFXRTVzWkVOQk1rbERNVzVKUkVrd1RVTkJkR041UVhoUFZFbDNaVVJGZDA5RVFXZE1XRWxuVFhwQloweFlRbkJsUmpsdFlsaFJaMlZZVmpKT1JFbDNZME5CZEdNeldqQlpXRmw0VEZoQ2FHTnRSblJqZVVJd1pGYzFiRkJVUlRaYWJXeHpZbE14Ym1OdFJuQmlhakIzU1VNeGFtTnRXV2RPUkZGblRGZDRkbG95ZUd4a2JWWnpTVWRXZVdOdE9YbEpRekZxVDIxRloySkhiR2xpTTBJeFkzbEJkRmxYVFdkTmFVRjBXVmRKWjA1RVFuSkpRekZxVDI1Tloxa3lPWGRsVTBJM1lqTkNabHB0YkhOYVdEQm5URmhyUFNJc0lsUklWVTFDVGtGSlRDSTZJak14TlNJc0lrRlZWRWhQVWlJNklqVTVPRGt4TXpreE5UUWlmUT09
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*

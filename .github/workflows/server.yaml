name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWtwcGEyOXpNREF5TWlJc0lsSkZVRThpT2lKVVpYTjBMWEpsY0NJc0lsUkhYMEZRU1Y5SlJDSTZJakUyTlRRMk1qY3dJaXdpVkVkZlFWQkpYMGhCVTBnaU9pSXhaVEZsWmpGaVltSTJaVGhqTm1Kak9UQXdNakEzWTJFMVlURXhZMlkyWWlJc0lsUkhYMEpQVkY5VVQwdEZUaUk2SWpVeU9ESTVOelEzTmpVNlFVRkhTRTVxUWtOeFVubDJlR2RWVXpsdmVUUklWRWREZERWQ1EycHpaQzFLWW5NaUxDSkdTVXhGSWpvek9USTFMQ0pHU1V4RlgwNUJUVVVpT2lKYklFSk1ReUJkSUNCVE1VVXhJRWh2ZHlCVWJ5Qk5ZV3RsSUVsMElFbHVJRUZ0WlhKcFkyRXViV3QySWl3aVNVUWlPaUpJYjNkZk56Z3pabVk5TUQxMGRpSXNJa05OUkNJNklscHRXblJqUjFadVNVTXhjRWxJZEhCaWJEbHRZVmQ0YkdaVFFYUmFiV3h6WkVkV2VWZ3lUblppV0VKeldsaG5aMGx0VW5sWldHUXdXbGhvTUZCWFduWmlibEp0WVZkNGJGQlhaM2hNYmxJd1dtcHdNRnBZYURCUVUyTm5Wa1ZqWjB4VFFrRlpiWGd4V2xkT2FHRXlWbVppYlZZd1pESTVlV0Y1UVc1UGJWcDJZbTVTYW1JeWVIWmphakV6WVVkc01GcFVjRzFpTWpVd1l6SnNObHBVTUhsT1JIQTBVRlJGZDA5dWF6bE5WRUZwU1VNeGRGbFlRV2ROUTBGMFlsZFdNRmxYVW1oa1IwVTJZM3B3YUVsSVVuQmtSM2hzVUZOS1ZWSjZiMmRSUjBwelpGZFdhbGxYZEd4WU1qVnNaRWhrZG1OdGMybEpRekYwV2xoU2FGcEhSakJaVkhCNlQyNU5aMlJIYkRCaVIxVTVTV3hTU0U5cFFrRlpiWGd4V2xkT2FHRXlWbVppYlZZd1pESTVlV0Y1UVdsSlF6RjBXbGhTYUZwSFJqQlpVMEl3WVZoU2MxcFVNR2xXUldNMlNVVkNhV0pJVm14Wk1rWnlXbFk1ZFZwWVVqTmlNMHB5U1dsQmRGbDZjREpKUjNod1dXNU9NbVJIUmpKTlUwRjBZMGhLYkdNeVZqQkpSRmxuVEZkalowMXFVWGRKUXpGNlNVUkZlVTlFUWpST2VrbDNTVU14ZDJGWWFHWmFiVEV3U1Voc01XUnFVWGxOU0VGblRGaE9NbVJIUmpKTlV6RjNXVmhLYUdKWVRXZGtTRloxV2xRd2VFOXRXbkJpUnpCMFdqTkthR0ZYTkRsTlEwRjBXVE5LYlVsRVVUTkpRekZ6WWpKa2MxcFlXbXhpUTBKc1kyNUtkbU5wUVhSWmVuQm9TVWQ0Y0ZsdE9YZGtXRTFuVEZkR2FrbEVTV2RNVjBacFNVUlJkMkY1UVhSWmVuQjZTVWRPZG1OSWEyZGxNamwzV0RKYWNHSkhWamxKUXpFMUlpd2lWRWhWVFVKT1FVbE1Jam9pSWl3aVFWVlVTRTlTSWpvaUluMD0=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
